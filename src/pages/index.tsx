import Head from "next/head";
import { useEffect, useState } from "react";
import { excelParser } from "@/utils/excelParser";
import { map } from "lodash";
import { encrypt } from "@/utils/crypto";
import sendChat from "@/utils/teams";
import { useMsal } from "@azure/msal-react";

import { loginRequest } from "@/utils/config";
import axios from "axios";

export default function Home() {
  const { instance, accounts } = useMsal();

  const [items, setItems] = useState([]);
  const [encryptedArray, setEncryptedArray] = useState([]);

  const changeHandler = async (e: any) => {
    const file = e?.target?.files[0];
    const parsedData: any = await excelParser(file);
    console.log(parsedData);
    setItems(parsedData);
  };

  const onClick = async () => {
    const a = await instance.acquireTokenRedirect(loginRequest).catch((e) => {
      console.log(e);
    });
    console.log(a);
  };

  const testMails = [
    {
      sendTo: "nasanbat.g@nest.edu.mn",
      message: "Hi",
    },
    {
      sendTo: "turbold.ch@nest.edu.mn",
      message: "Hi",
    },
    {
      sendTo: "zolboo.o@nest.edu.mn",
      message: "Hi",
    },
    {
      sendTo: "anand-ochir.u@nest.edu.mn",
      message: "Hi",
    },
    {
      sendTo: "altundrakh.g@pinecone.mn",
      message: "Hi",
    },
  ];

  const sendChat = async () => {
    const accessTokenRequest = {
      scopes: ["Chat.Create", "Chat.ReadWrite", "ChatMessage.Send"],
      account: instance.getAllAccounts()[0],
    };

    let accessToken: any;

    await instance
      .acquireTokenSilent(accessTokenRequest)
      .then((tokenResponse) => {
        accessToken = tokenResponse.accessToken;
      })
      .catch((error) => {
        console.log(error);
        instance.acquireTokenRedirect(accessTokenRequest);
      });

    const promises = testMails.map((mail) =>
      axios.post(
        "/api/teams",
        {
          sendTo: mail.sendTo,
          message: mail.message,
        },
        {
          headers: {
            Authorization: accessToken,
          },
        }
      )
    );
    Promise.all(promises).then((res) => console.log(res));
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <input type="file" onChange={changeHandler} />
        </div>
        <button onClick={onClick}>Login</button>
        <button onClick={sendChat}>Send</button>
      </main>
    </>
  );
}
